syntax = "proto3";

package celestiadomain.celestiadomain;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "celestiadomain/celestiadomain/params.proto";
import "celestiadomain/celestiadomain/domain.proto";

option go_package = "celestia-domain/x/celestiadomain/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/celestia-domain/celestiadomain/params";
  
  }
  
  // Query a domain name.
  rpc Domain (QueryDomainRequest) returns (QueryDomainResponse) {
    option (google.api.http).get = "/celestia-domain/celestiadomain/domain";
  
  }
  
  // Queries a list of Domains items.
  rpc Domains (QueryDomainsRequest) returns (QueryDomainsResponse) {
    option (google.api.http).get = "/celestia-domain/celestiadomain/domains";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryDomainRequest {
  string domain = 1;
}

message QueryDomainResponse {
  string owner    = 1;
  string domain     = 2;
  uint64 expiration = 3;
}

message QueryDomainsRequest {
  string owner = 1;

  // Adding pagination to request
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryDomainsResponse {
  // Returning a list of recipes
  repeated Domain domain = 1;

  // Adding pagination to response
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

